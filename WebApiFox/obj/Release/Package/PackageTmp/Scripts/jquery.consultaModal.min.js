let detailReques = []; function GetDetailData(a) { $("#trcat").attr("hidden", !0); let b = { anio: $("#txtAnio").val(), tabla: $("#txtTipoTramite").val(), expediente: a }; fns.CallGetAsync("api/values/Getall", b, function (j) { let { numeroExpediente: f, nomProy: k, numeroIngreso: l, fechaIngreso: m, fechaAsignacion: u, descripcionEstado: n, descripcionCategoria: o, categoria: p, estado: c, uso_esp: q, codigo_uso: r, fechaSalRec: v, tiempoMinimo: g, tiempoMaximoDemora: d, tiempoMaximo: h, tiempoRespuesta: e } = j[0]; validacion = q.substring(0, 3), validacion2 = r.substring(0, 3), $("#numExpediente").text(b.tabla.toUpperCase() + "-" + f), $("#numExp").text(b.tabla.toUpperCase() + "-" + f), $("#nomProy").text(k), $("#dateIngre").text(m), $("#estado").text(n), $("#numIngr").text(l), $("#DiaTran").text(e), ("pc" == b.tabla || "cl" == b.tabla) && ($("#catdt").html(' <i data-toggle="tooltip" title="" id="catInfo" class="fa fa-info-circle" style="color:#0095E8;font-size:20px" aria-hidden="true"></i> <label>Categoria:</label> '), $("#catInfo").attr("title", o), $("#trcat").attr("hidden", !1), $("#cat").text(p)), function (d) { !function () { let b = $("[data-card]"); for (let a = 0; a < b.length; a++)$(b[a]).removeClass("green-card"), $(b[a]).removeClass("grey-card"), $(b[a]).removeClass("blue-card") }(); let a, b, c; switch (d) { case "D": case "F": a = "El expediente ya ha sido asignado al departamento correspondiente", c = "Los procesos de an\xe1lisis ya han sido completados", b = "La resoluci\xf3n ha sido retirada", $("#asignacion-card").addClass("green-card"), $("#analisis-card").addClass("green-card"), $("#respuesta-card").addClass("green-card"); break; case "M": a = "El expediente ya ha sido asignado al departamento correspondiente", c = "Los procesos de an\xe1lisis ya han sido completados", b = null != v ? "La resoluci\xf3n ha sido retirada" : "La resoluci\xf3n se encuentra en ventanilla en espera de su retiro", $("#asignacion-card").addClass("green-card"), $("#analisis-card").addClass("green-card"), $("#respuesta-card").addClass("blue-card"); break; case "T": null != u ? (a = "El expediente ya ha sido asignado al departamento correspondiente", c = "El expediente se encuentra en los procesos de an\xe1lisis correspondientes", b = "No iniciado", $("#asignacion-card").addClass("green-card"), $("#analisis-card").addClass("blue-card"), $("#respuesta-card").addClass("grey-card")) : (a = "Expediente en proceso de ser asignado al personal del departamento correpondiente", b = "No iniciado", c = "No iniciado", $("#asignacion-card").addClass("grey-card"), $("#analisis-card").addClass("grey-card"), $("#respuesta-card").addClass("grey-card")); break; default: a = "Expediente en proceso de ser asignado al personal del departamento correpondiente", b = "No iniciado", c = "No iniciado", $("#asignacion-card").addClass("grey-card"), $("#analisis-card").addClass("grey-card"), $("#respuesta-card").addClass("grey-card") }$("#textAsignacion").text(a), $("#textAnalisis").text(c), $("#textRespuesta").text(b) }(c); let a = new Date, s = a.getMonth() + 1, t = a.getDate(); a.getFullYear(), a.getFullYear(), ("" + s).length, ("" + t).length, GenerarGaugeCanvas("gaugeTranscurrido", g, d, h, e, "Transcurridos"); let i = 0; i = "T" != c && "M" != c ? 0 : d - e, GenerarGaugeCanvas("gaugeRestante", g, d, h, i, "Restantes") }) } function GenerarGaugeCanvas(d, b, a, c, e, f) { new RadialGauge({ renderTo: d, width: 170, height: 170, units: f, valueDec: 0, valueInt: 2, minValue: b, startAngle: 90, ticksAngle: 180, valueBox: !0, maxValue: a, majorTicks: [b, c, a], minorTicks: 4, strokeTicks: !0, highlights: [{ from: c, to: a, color: "#e0e6eb" }], colorPlate: "#fff", borderShadowWidth: 0, borders: !1, needleType: "arrow", needleWidth: 2, needleCircleSize: 7, needleCircleOuter: !0, needleCircleInner: !1, animationDuration: 1500, animationRule: "linear" }).draw().value = e }